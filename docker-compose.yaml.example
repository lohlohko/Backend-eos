# docker-compose example to start all needed services
# during dev.
#
# This file assumes the following directory structure
# - /path/to/base/directory
#   - codebase-node  => backend app, cloned from git.
#   - docker-compose.yaml  => this file.
#
#
# Quick start:
# - Enter /path/to/base/directory (whatever it is in your setup)
# - Clone backend app from git into the above directory structure.
# - Copy "/codebase-node/docker-compose.yaml.otel" to
#   "docker-compose.yaml". This will be your local configuration,
#   not synced to git. Necessary because env variables in dev
#   (including db connection) could be on this file.
# - Build and start services: docker compose up --build -t1 -d
# - Test Backend: curl http://localhost:9111
# - Stop services: docker compose down -t1

version: '3.3'
# this name will be useful for (e.g.) "docker compose -p"

networks:
  mynetwork:
    driver: bridge

services:
  backend:
    depends_on:
      - jaeger
    ports:
      - '9111:9000'
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=9000
      - ENV=dev
      - CORS_ORIGINS=*
      - CORS_ALLOW_HEADERS=Authorization
      - CORS_EXPOSE_HEADERS=Authorization
      - CORS_PREFLIGHT_MAX_AGE=5
      - BASIC_AUTH_USERNAME=username
      - BASIC_AUTH_PASSWORD=password
      - PUBLIC_KEY=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF2dFdxakhKRmU1b3N4UWE1S1dTbgo2TjVKTW0zeVRsTUEvMVZPQU1JNGFmcmxwZnM4SXkzSFU3TFh5OWRnRFpYQmxHamRUVFJWa1pLY2hGNk00WE5NCmpXMVZSV2ZGcnRFK3FGMnRPdk5ZbU9hcEVDSU41UDhSUlVOVFl4V0RhL3FoTW1renpFbktIY29LbWd0V0I1TTEKWUhsR3A5NmZqb2IzZEVZeXJjeWprQ2h4V01iSXB5ZmR6aVR6RXpPbm5UY1lBTVpNNlVERzNON2xsa0haYllQcgpaY3IrN2QrTlRWZElLdWgrdW5ZNnl3a1ZRQ0tudG5xNmg4eGxRczQvQ3M0RDZTZlBZd2YxVlJGZzdyQkt1T3hjCkxadGxteGJ5NXBHakJnd2xLRC92VzlidmUwZUFpQ09zWDFsakhrYXYrSHJEdTJpMnJKQytrWFJSQjVPZE9DRjUKNVpnaFRIb1ZEQlJDeFBRL1NocmVwUGlteHo5R2VVOElNdkV0cDlYN1VZV2RFdndrL3E2dlJpN283cFBTREl3ZwpOaG9ZY0hkYlZPY0tCM215dU0vV3ZabXlEeHU5anI0Mi9UYkkzbkpQZjh3bzVRSEdjOGdtalNCQUJ0YWFFWmxvCnpLbk0yWHNDZ0xlZWZYTHJjY09OZEpOTFgxaGZ5TFFEOE9nRjQ0YWVmcWFzUUt5d1NxZmYrbkhVcW52dlVEUjIKelNMNzQzOFFYR01DZy9CZjJCK2lJaDZiWmt6T1NXMnlHK2cvdy92Z1FhUEkvMkMvOGlidlB3QU45TDBacHdWbwo0dWthZ3FwTnFVTEpPb21BUjJUZ1hJVi9YUm1XaWlvQS9vNXo2TXdhOW5iSmFueCtKQ0x3K3orOEIrU3JQSTVTCkYwTE9lZTFsbVpSWmZpczFpQUVEbDZrQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ==
      - PRIVATE_KEY=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdnRXcWpISkZlNW9zeFFhNUtXU242TjVKTW0zeVRsTUEvMVZPQU1JNGFmcmxwZnM4Ckl5M0hVN0xYeTlkZ0RaWEJsR2pkVFRSVmtaS2NoRjZNNFhOTWpXMVZSV2ZGcnRFK3FGMnRPdk5ZbU9hcEVDSU4KNVA4UlJVTlRZeFdEYS9xaE1ta3p6RW5LSGNvS21ndFdCNU0xWUhsR3A5NmZqb2IzZEVZeXJjeWprQ2h4V01iSQpweWZkemlUekV6T25uVGNZQU1aTTZVREczTjdsbGtIWmJZUHJaY3IrN2QrTlRWZElLdWgrdW5ZNnl3a1ZRQ0tuCnRucTZoOHhsUXM0L0NzNEQ2U2ZQWXdmMVZSRmc3ckJLdU94Y0xadGxteGJ5NXBHakJnd2xLRC92VzlidmUwZUEKaUNPc1gxbGpIa2F2K0hyRHUyaTJySkMra1hSUkI1T2RPQ0Y1NVpnaFRIb1ZEQlJDeFBRL1NocmVwUGlteHo5RwplVThJTXZFdHA5WDdVWVdkRXZ3ay9xNnZSaTdvN3BQU0RJd2dOaG9ZY0hkYlZPY0tCM215dU0vV3ZabXlEeHU5CmpyNDIvVGJJM25KUGY4d281UUhHYzhnbWpTQkFCdGFhRVpsb3pLbk0yWHNDZ0xlZWZYTHJjY09OZEpOTFgxaGYKeUxRRDhPZ0Y0NGFlZnFhc1FLeXdTcWZmK25IVXFudnZVRFIyelNMNzQzOFFYR01DZy9CZjJCK2lJaDZiWmt6TwpTVzJ5RytnL3cvdmdRYVBJLzJDLzhpYnZQd0FOOUwwWnB3Vm80dWthZ3FwTnFVTEpPb21BUjJUZ1hJVi9YUm1XCmlpb0EvbzV6Nk13YTluYkphbngrSkNMdyt6KzhCK1NyUEk1U0YwTE9lZTFsbVpSWmZpczFpQUVEbDZrQ0F3RUEKQVFLQ0FnRUF1eVh4bHNDdUVaUldXWGJKZWFXajRZUzFSZ1o2L1lMN1ZHeEZEZ3RxcGN5UEVLTDlEQWJtRnRncQpOMWJsZFEwcmhhNzljS3hsU2xqOHMvZkJzNHVPUkpnM2F0UmxFcGRVR211YjZsY2h5UGxVVFdVSU9VNUhrcVIvCkQ0bldrN3Q4QUdNWmtEdkJRa3VVOEJNejhFUFdzZURkZ04yYm5ud1FDM0NZWE1kMmxIYUZDaW9RTjVXcU9YTVYKQ3Z5NllUelpobER5dGtGM2hMMzNhODd5T3l1SFhCR2l4b2RaSE1ML0hFMWJrdU5Gcno0ZUlBS2NkU0dROG9KcAp3QVZoMytmQUFCU3hsbzRFYzhPU1N5S0tkU1lmRS83MHV3N2JjWERiN3A5VWhVK0dIb3YvMmVkNlRvaWxqL0NxCmV0T1oyVllUeENQaUdnUHRUOXBCYU92RDRIczcvVThxMTlLU2VTSTIwSlpuUTYvbXFPTWZuNWo2akJ6Mm5BTjUKVFA0ZktHV1VuZG00QXJtUzkvd25XTTZqeVdMeXNoQ3dSbmpzR2NRTExvNmZYTi9YbGZTZG9SRHllZk1pOXFpMgpZMTJ5clQ0dVZ2Sy9PRTRrL0JZREVsU085cStVK0N1QmpZakZXVnNTTjFaTmlJd1FnRm42NnNSQ3JmNTBjTTAwCjVMenZISi9XbnNCZG8rUjdnVTI5elRkVzJKV3A3OURIT2Q2RmU4bkxHYXFIMk42UXhXYVljNlNDUzNVRnVaSTAKK2s1T29oRlVKTzFVVW8wZHByS1Rtd2pOcUE2SWFUQ0hVTXJ3L1drY2Q2WjVrd3BiM0MvVVR0blNMQ0RrOElncwp3eGlFRVlWeE4yZTlXMW5sNUhYZVVNcmMyc3N0ZCtsY2hsSVFwR3M1OStjb08yYm1LWEVDZ2dFQkFQemNuN3BCClA3eEFramJlUks0cFJxOGdQRU84eUxNRVJHS2NabFFSVjVjdTBQZmxmVzFxaGh1Q1FRcVBONy9BczBVVWwyVXQKajF5azdrTXZjaytObjU1WjI1NERlYnFqbTNPaWRoOTRpN00wMDltWlI0OEU5ZW81U0N4dm1NSXNTZGhmSXNIaAptejlZYTd2RWg4MXhyU0Fwc2pqTDN1Skgxb1FJaG0yenhJTWIrRjloQ3pxUmN5Z2ZzR0d1NXJUblZLQndEV1o5CkhaNllSV3hsU1lYTW42dnhsYzdYTkU4bC92N0VpMTk5czlQc2RDa0ZPSEVZcTh6cEYxVE16cFhIOFhLTU5qcFoKek44am55NThzMGxQOU4vYkU0ZEhDQW9wVWY1NVdWbURicEtIQzk3by8yeEpOM3lQZ1Ivc21GTi9wQ01OV0R4TQpBVHhwWVlGT1E5a3pKUjBDZ2dFQkFNRXorVHRYMkNHUk83dVpYOHdjY2RkZDdaRVVmbWRyVDJvWXVYSW45YkxHCmRuRDIydEUvaEtteUF0TzdPYkF0R0xNd1c5cyt2NzZjS3JwQldUdWtkby9hZFhjb0VxQXBPR0Q3UlJXZmFiVkIKMkZ4d1FLT21xSVdSbzZnVDI5cjJRL1JSWkwyeWwwZDdaZE5BNTRxTlA3d0dtNTdwcm1EaEFIYzh4NFB4dmovdApNTTg4NG0yanhyOElvWU5hdEgrb2JsNjV5b2VzNGlWMTVhTXFKVnRlTXV0UUpDUmFWWmpYTzRQRkV3bHVkVUtVCk1uZTBtNW1jNW1QKzlYemgyK21lUm84Y0grL00weVRjZXIzcUQzOVpsamthZGRUamVWVlY4QTVnMjZ2MzR2emsKV2pEQ3BYaWxHai9IZWNaYitRSzUvelFkVFhiT2xUR0F6WUttS09EbGN2MENnZ0VBTklib0wxcktrS0toUFFDagpKOEt2U2tYWi93QkNlTjJVRHlBS0tjQ0lmNEZjSzRMaXNVNEZtY1ZQR1pCeXRrU2plT0EwS3ZKeDYzN2ZkOWx0ClY1VkY2VEVsYkFld3k5S2N3a0tuWXhZNWZ2cWtYM2wxNGdIWHk5WW1aZ1N3cVBWbVNhcEpvQmpybFJjYkdpQlQKVFp3bHFKN0F4UWVrdjBESkVSaHNSSEdwaXNyT3A1R1RNWkZ4YUk1Y3A0NGJvc3pEU2FpOVArTVJ1aFpMcFo3TQp6UnlhdHE4eXZZcjY5TTRoMEc2bnZTaHhxTDVmeXYyb29lWE1Hbjc1Tjhacnk3V0ROSlpuMVdzK0ljUldsdU9VCm90QVhRRUZVSnkvY1BiQWp0a2NqQm5ORkR1ODZ5ZzJBc2MvcjFOWkNybzBKZjU3dVM5SEQySks1VndGVkhmVlMKSnRaM0NRS0NBUUJTdzl3UjR2alFzSEhCVk52b0NZdHZNbXF5Q3ZCM2gwMzI2bTZQQzdWQ2g2aDNqaGlCS1UvQQpqbVNOcFpmNTgrZXY0NWlHSEtSeG1GN3BlVk1yckxHcHdIRXZ3WGZ4S3BkZlhHVGs5V3lJWEpPK1Rjd3pEeE1FClhUYVpxeUEwOWVoNGdtSEFyZ0FHZkVOTHMzTTlOSE5JTGlCK2ZDYmFrNmpxYTV3ZzF1K2tYUXpheW45SmJxNlcKYWJFZkh6MVJycXJSWTQveWZVcEh0L0RPN0NBaXV3RGZNMjY0TUFhWk9pTGh1UXdGcjA4R1hZd2RJYjdDbUtkTgowUXdER3BKbHl3cjVCWmhjMXdiZ3RKN1VPcSsyNDM3cUtYNnUyMS9BQWRlYm9UeVp0OUNDZTZSelhQOGI1c2FPCjZmb3QwbnFqQTJEalIyWkc3Z3FWc1ZMWWxDdlE1QnBWQW9JQkFDakVDNDFOYkNmcHdnSXRPczFLZUJRM2RWQ3cKdUlyOG5ERjY3THErS3FLeEtOMGhVQVkyWURUV1VwMk5pd21DdFFKelcxSk1lY0s4dGdIOGhQQm54Tk84cUlkUworYnJ1d0VpY1NyUEhvU2IxS0pUYkliV25IZFNIMUFEYnJ2NXFNekhmMEFCN1dXNnRDbmNJOFFvY04wYWNRdFBGClFLK0MyZGl5M1h1NzY4T3V5WUordWNmM2VJRFk0VitHaG1nVzYzemYwLzNnc0dQTjEwNVUyejJESW90azk1VzEKZVd3NTFHQTJteEozeG5NSW0xWXNvM3p4eHJrNUhyRE1kZGlGWUtsRGl0NTJqWUlraDZHZlh2cGVXNE9xWVNIVgo3bFVVWVlVREpCcE9qSnpzWkVieFBKQWdhb2tOOW9EK1NaVTRKTGlsb2ZTVVFmSEdkNEhWdHdwSVRaQT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=
      - JWT_SIGNING_ALGORITHM=RS256
      - JWT_AUDIENCE=codebase
      - JWT_ISSUER=local
      - JWT_EXPIRATION_TIME=15m
      - REFRESH_PUBLIC_KEY=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF2dFdxakhKRmU1b3N4UWE1S1dTbgo2TjVKTW0zeVRsTUEvMVZPQU1JNGFmcmxwZnM4SXkzSFU3TFh5OWRnRFpYQmxHamRUVFJWa1pLY2hGNk00WE5NCmpXMVZSV2ZGcnRFK3FGMnRPdk5ZbU9hcEVDSU41UDhSUlVOVFl4V0RhL3FoTW1renpFbktIY29LbWd0V0I1TTEKWUhsR3A5NmZqb2IzZEVZeXJjeWprQ2h4V01iSXB5ZmR6aVR6RXpPbm5UY1lBTVpNNlVERzNON2xsa0haYllQcgpaY3IrN2QrTlRWZElLdWgrdW5ZNnl3a1ZRQ0tudG5xNmg4eGxRczQvQ3M0RDZTZlBZd2YxVlJGZzdyQkt1T3hjCkxadGxteGJ5NXBHakJnd2xLRC92VzlidmUwZUFpQ09zWDFsakhrYXYrSHJEdTJpMnJKQytrWFJSQjVPZE9DRjUKNVpnaFRIb1ZEQlJDeFBRL1NocmVwUGlteHo5R2VVOElNdkV0cDlYN1VZV2RFdndrL3E2dlJpN283cFBTREl3ZwpOaG9ZY0hkYlZPY0tCM215dU0vV3ZabXlEeHU5anI0Mi9UYkkzbkpQZjh3bzVRSEdjOGdtalNCQUJ0YWFFWmxvCnpLbk0yWHNDZ0xlZWZYTHJjY09OZEpOTFgxaGZ5TFFEOE9nRjQ0YWVmcWFzUUt5d1NxZmYrbkhVcW52dlVEUjIKelNMNzQzOFFYR01DZy9CZjJCK2lJaDZiWmt6T1NXMnlHK2cvdy92Z1FhUEkvMkMvOGlidlB3QU45TDBacHdWbwo0dWthZ3FwTnFVTEpPb21BUjJUZ1hJVi9YUm1XaWlvQS9vNXo2TXdhOW5iSmFueCtKQ0x3K3orOEIrU3JQSTVTCkYwTE9lZTFsbVpSWmZpczFpQUVEbDZrQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ==
      - REFRESH_PRIVATE_KEY=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdnRXcWpISkZlNW9zeFFhNUtXU242TjVKTW0zeVRsTUEvMVZPQU1JNGFmcmxwZnM4Ckl5M0hVN0xYeTlkZ0RaWEJsR2pkVFRSVmtaS2NoRjZNNFhOTWpXMVZSV2ZGcnRFK3FGMnRPdk5ZbU9hcEVDSU4KNVA4UlJVTlRZeFdEYS9xaE1ta3p6RW5LSGNvS21ndFdCNU0xWUhsR3A5NmZqb2IzZEVZeXJjeWprQ2h4V01iSQpweWZkemlUekV6T25uVGNZQU1aTTZVREczTjdsbGtIWmJZUHJaY3IrN2QrTlRWZElLdWgrdW5ZNnl3a1ZRQ0tuCnRucTZoOHhsUXM0L0NzNEQ2U2ZQWXdmMVZSRmc3ckJLdU94Y0xadGxteGJ5NXBHakJnd2xLRC92VzlidmUwZUEKaUNPc1gxbGpIa2F2K0hyRHUyaTJySkMra1hSUkI1T2RPQ0Y1NVpnaFRIb1ZEQlJDeFBRL1NocmVwUGlteHo5RwplVThJTXZFdHA5WDdVWVdkRXZ3ay9xNnZSaTdvN3BQU0RJd2dOaG9ZY0hkYlZPY0tCM215dU0vV3ZabXlEeHU5CmpyNDIvVGJJM25KUGY4d281UUhHYzhnbWpTQkFCdGFhRVpsb3pLbk0yWHNDZ0xlZWZYTHJjY09OZEpOTFgxaGYKeUxRRDhPZ0Y0NGFlZnFhc1FLeXdTcWZmK25IVXFudnZVRFIyelNMNzQzOFFYR01DZy9CZjJCK2lJaDZiWmt6TwpTVzJ5RytnL3cvdmdRYVBJLzJDLzhpYnZQd0FOOUwwWnB3Vm80dWthZ3FwTnFVTEpPb21BUjJUZ1hJVi9YUm1XCmlpb0EvbzV6Nk13YTluYkphbngrSkNMdyt6KzhCK1NyUEk1U0YwTE9lZTFsbVpSWmZpczFpQUVEbDZrQ0F3RUEKQVFLQ0FnRUF1eVh4bHNDdUVaUldXWGJKZWFXajRZUzFSZ1o2L1lMN1ZHeEZEZ3RxcGN5UEVLTDlEQWJtRnRncQpOMWJsZFEwcmhhNzljS3hsU2xqOHMvZkJzNHVPUkpnM2F0UmxFcGRVR211YjZsY2h5UGxVVFdVSU9VNUhrcVIvCkQ0bldrN3Q4QUdNWmtEdkJRa3VVOEJNejhFUFdzZURkZ04yYm5ud1FDM0NZWE1kMmxIYUZDaW9RTjVXcU9YTVYKQ3Z5NllUelpobER5dGtGM2hMMzNhODd5T3l1SFhCR2l4b2RaSE1ML0hFMWJrdU5Gcno0ZUlBS2NkU0dROG9KcAp3QVZoMytmQUFCU3hsbzRFYzhPU1N5S0tkU1lmRS83MHV3N2JjWERiN3A5VWhVK0dIb3YvMmVkNlRvaWxqL0NxCmV0T1oyVllUeENQaUdnUHRUOXBCYU92RDRIczcvVThxMTlLU2VTSTIwSlpuUTYvbXFPTWZuNWo2akJ6Mm5BTjUKVFA0ZktHV1VuZG00QXJtUzkvd25XTTZqeVdMeXNoQ3dSbmpzR2NRTExvNmZYTi9YbGZTZG9SRHllZk1pOXFpMgpZMTJ5clQ0dVZ2Sy9PRTRrL0JZREVsU085cStVK0N1QmpZakZXVnNTTjFaTmlJd1FnRm42NnNSQ3JmNTBjTTAwCjVMenZISi9XbnNCZG8rUjdnVTI5elRkVzJKV3A3OURIT2Q2RmU4bkxHYXFIMk42UXhXYVljNlNDUzNVRnVaSTAKK2s1T29oRlVKTzFVVW8wZHByS1Rtd2pOcUE2SWFUQ0hVTXJ3L1drY2Q2WjVrd3BiM0MvVVR0blNMQ0RrOElncwp3eGlFRVlWeE4yZTlXMW5sNUhYZVVNcmMyc3N0ZCtsY2hsSVFwR3M1OStjb08yYm1LWEVDZ2dFQkFQemNuN3BCClA3eEFramJlUks0cFJxOGdQRU84eUxNRVJHS2NabFFSVjVjdTBQZmxmVzFxaGh1Q1FRcVBONy9BczBVVWwyVXQKajF5azdrTXZjaytObjU1WjI1NERlYnFqbTNPaWRoOTRpN00wMDltWlI0OEU5ZW81U0N4dm1NSXNTZGhmSXNIaAptejlZYTd2RWg4MXhyU0Fwc2pqTDN1Skgxb1FJaG0yenhJTWIrRjloQ3pxUmN5Z2ZzR0d1NXJUblZLQndEV1o5CkhaNllSV3hsU1lYTW42dnhsYzdYTkU4bC92N0VpMTk5czlQc2RDa0ZPSEVZcTh6cEYxVE16cFhIOFhLTU5qcFoKek44am55NThzMGxQOU4vYkU0ZEhDQW9wVWY1NVdWbURicEtIQzk3by8yeEpOM3lQZ1Ivc21GTi9wQ01OV0R4TQpBVHhwWVlGT1E5a3pKUjBDZ2dFQkFNRXorVHRYMkNHUk83dVpYOHdjY2RkZDdaRVVmbWRyVDJvWXVYSW45YkxHCmRuRDIydEUvaEtteUF0TzdPYkF0R0xNd1c5cyt2NzZjS3JwQldUdWtkby9hZFhjb0VxQXBPR0Q3UlJXZmFiVkIKMkZ4d1FLT21xSVdSbzZnVDI5cjJRL1JSWkwyeWwwZDdaZE5BNTRxTlA3d0dtNTdwcm1EaEFIYzh4NFB4dmovdApNTTg4NG0yanhyOElvWU5hdEgrb2JsNjV5b2VzNGlWMTVhTXFKVnRlTXV0UUpDUmFWWmpYTzRQRkV3bHVkVUtVCk1uZTBtNW1jNW1QKzlYemgyK21lUm84Y0grL00weVRjZXIzcUQzOVpsamthZGRUamVWVlY4QTVnMjZ2MzR2emsKV2pEQ3BYaWxHai9IZWNaYitRSzUvelFkVFhiT2xUR0F6WUttS09EbGN2MENnZ0VBTklib0wxcktrS0toUFFDagpKOEt2U2tYWi93QkNlTjJVRHlBS0tjQ0lmNEZjSzRMaXNVNEZtY1ZQR1pCeXRrU2plT0EwS3ZKeDYzN2ZkOWx0ClY1VkY2VEVsYkFld3k5S2N3a0tuWXhZNWZ2cWtYM2wxNGdIWHk5WW1aZ1N3cVBWbVNhcEpvQmpybFJjYkdpQlQKVFp3bHFKN0F4UWVrdjBESkVSaHNSSEdwaXNyT3A1R1RNWkZ4YUk1Y3A0NGJvc3pEU2FpOVArTVJ1aFpMcFo3TQp6UnlhdHE4eXZZcjY5TTRoMEc2bnZTaHhxTDVmeXYyb29lWE1Hbjc1Tjhacnk3V0ROSlpuMVdzK0ljUldsdU9VCm90QVhRRUZVSnkvY1BiQWp0a2NqQm5ORkR1ODZ5ZzJBc2MvcjFOWkNybzBKZjU3dVM5SEQySks1VndGVkhmVlMKSnRaM0NRS0NBUUJTdzl3UjR2alFzSEhCVk52b0NZdHZNbXF5Q3ZCM2gwMzI2bTZQQzdWQ2g2aDNqaGlCS1UvQQpqbVNOcFpmNTgrZXY0NWlHSEtSeG1GN3BlVk1yckxHcHdIRXZ3WGZ4S3BkZlhHVGs5V3lJWEpPK1Rjd3pEeE1FClhUYVpxeUEwOWVoNGdtSEFyZ0FHZkVOTHMzTTlOSE5JTGlCK2ZDYmFrNmpxYTV3ZzF1K2tYUXpheW45SmJxNlcKYWJFZkh6MVJycXJSWTQveWZVcEh0L0RPN0NBaXV3RGZNMjY0TUFhWk9pTGh1UXdGcjA4R1hZd2RJYjdDbUtkTgowUXdER3BKbHl3cjVCWmhjMXdiZ3RKN1VPcSsyNDM3cUtYNnUyMS9BQWRlYm9UeVp0OUNDZTZSelhQOGI1c2FPCjZmb3QwbnFqQTJEalIyWkc3Z3FWc1ZMWWxDdlE1QnBWQW9JQkFDakVDNDFOYkNmcHdnSXRPczFLZUJRM2RWQ3cKdUlyOG5ERjY3THErS3FLeEtOMGhVQVkyWURUV1VwMk5pd21DdFFKelcxSk1lY0s4dGdIOGhQQm54Tk84cUlkUworYnJ1d0VpY1NyUEhvU2IxS0pUYkliV25IZFNIMUFEYnJ2NXFNekhmMEFCN1dXNnRDbmNJOFFvY04wYWNRdFBGClFLK0MyZGl5M1h1NzY4T3V5WUordWNmM2VJRFk0VitHaG1nVzYzemYwLzNnc0dQTjEwNVUyejJESW90azk1VzEKZVd3NTFHQTJteEozeG5NSW0xWXNvM3p4eHJrNUhyRE1kZGlGWUtsRGl0NTJqWUlraDZHZlh2cGVXNE9xWVNIVgo3bFVVWVlVREpCcE9qSnpzWkVieFBKQWdhb2tOOW9EK1NaVTRKTGlsb2ZTVVFmSEdkNEhWdHdwSVRaQT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=
      - REFRESH_JWT_EXPIRATION_TIME=7d
      - CIPHER_ALGORITHM=aes-256-cbc
      - CIPHER_IV_LENGTH=16
      - CIPHER_KEY=557aa67629114607a1dddf86bb5ed784
      - POSTGRESQL_URL=postgresql://postgres:p4ssw0rd@localhost:5111/test
      - MONGO_DATABASE_URL=mongodb://localhost:27017/test
      - MONITORING=opentelemetry
      - OPENTELEMETRY_HOST=http://localhost:4318
    networks:
      - mynetwork

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - '16686:16686' # Jaeger UI
      - '6831:6831/udp' # Jaeger compact Thrift UDP
      - '6832:6832/udp' # Jaeger binary Thrift UDP
      - '14268:14268' # Jaeger compact Thrift HTTP
      - '14269:14269' # Jaeger binary Thrift HTTP
      - '14250:14250' # Jaeger agent HTTP
    networks:
      - mynetwork

